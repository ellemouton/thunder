// Code generated by protoc-gen-go. DO NOT EDIT.
// source: elle.proto

package ellepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RequiresPaymentRequest struct {
	Path                 string   `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequiresPaymentRequest) Reset()         { *m = RequiresPaymentRequest{} }
func (m *RequiresPaymentRequest) String() string { return proto.CompactTextString(m) }
func (*RequiresPaymentRequest) ProtoMessage()    {}
func (*RequiresPaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fd8c597f76012e7, []int{0}
}

func (m *RequiresPaymentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequiresPaymentRequest.Unmarshal(m, b)
}
func (m *RequiresPaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequiresPaymentRequest.Marshal(b, m, deterministic)
}
func (m *RequiresPaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequiresPaymentRequest.Merge(m, src)
}
func (m *RequiresPaymentRequest) XXX_Size() int {
	return xxx_messageInfo_RequiresPaymentRequest.Size(m)
}
func (m *RequiresPaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RequiresPaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RequiresPaymentRequest proto.InternalMessageInfo

func (m *RequiresPaymentRequest) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

type RequiresPaymentResponse struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	RequiresPayment      bool     `protobuf:"varint,2,opt,name=requires_payment,json=requiresPayment,proto3" json:"requires_payment,omitempty"`
	Price                int64    `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Memo                 string   `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequiresPaymentResponse) Reset()         { *m = RequiresPaymentResponse{} }
func (m *RequiresPaymentResponse) String() string { return proto.CompactTextString(m) }
func (*RequiresPaymentResponse) ProtoMessage()    {}
func (*RequiresPaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fd8c597f76012e7, []int{1}
}

func (m *RequiresPaymentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequiresPaymentResponse.Unmarshal(m, b)
}
func (m *RequiresPaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequiresPaymentResponse.Marshal(b, m, deterministic)
}
func (m *RequiresPaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequiresPaymentResponse.Merge(m, src)
}
func (m *RequiresPaymentResponse) XXX_Size() int {
	return xxx_messageInfo_RequiresPaymentResponse.Size(m)
}
func (m *RequiresPaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RequiresPaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RequiresPaymentResponse proto.InternalMessageInfo

func (m *RequiresPaymentResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RequiresPaymentResponse) GetRequiresPayment() bool {
	if m != nil {
		return m.RequiresPayment
	}
	return false
}

func (m *RequiresPaymentResponse) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *RequiresPaymentResponse) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func init() {
	proto.RegisterType((*RequiresPaymentRequest)(nil), "ellepb.RequiresPaymentRequest")
	proto.RegisterType((*RequiresPaymentResponse)(nil), "ellepb.RequiresPaymentResponse")
}

func init() { proto.RegisterFile("elle.proto", fileDescriptor_8fd8c597f76012e7) }

var fileDescriptor_8fd8c597f76012e7 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xcd, 0xc9, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0xb1, 0x0b, 0x92, 0x94, 0x74, 0xb8, 0xc4,
	0x82, 0x52, 0x0b, 0x4b, 0x33, 0x8b, 0x52, 0x8b, 0x03, 0x12, 0x2b, 0x73, 0x53, 0xf3, 0x4a, 0x40,
	0xdc, 0xd4, 0xe2, 0x12, 0x21, 0x21, 0x2e, 0x96, 0x82, 0xc4, 0x92, 0x0c, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0xce, 0x20, 0x30, 0x5b, 0xa9, 0x8e, 0x4b, 0x1c, 0x43, 0x75, 0x71, 0x41, 0x7e, 0x5e, 0x71,
	0xaa, 0x10, 0x1f, 0x17, 0x53, 0x66, 0x0a, 0x58, 0x31, 0x73, 0x10, 0x53, 0x66, 0x8a, 0x90, 0x26,
	0x97, 0x40, 0x11, 0x54, 0x69, 0x7c, 0x01, 0x44, 0xad, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x47, 0x10,
	0x7f, 0x11, 0xaa, 0x11, 0x42, 0x22, 0x5c, 0xac, 0x05, 0x45, 0x99, 0xc9, 0xa9, 0x12, 0xcc, 0x60,
	0xdd, 0x10, 0x0e, 0xc8, 0xfe, 0xdc, 0xd4, 0xdc, 0x7c, 0x09, 0x16, 0x88, 0xfd, 0x20, 0xb6, 0x51,
	0x0c, 0x17, 0x8b, 0x6b, 0x4e, 0x4e, 0xaa, 0x50, 0x08, 0x17, 0x3f, 0x9a, 0x3b, 0x84, 0xe4, 0xf4,
	0x20, 0x3e, 0xd2, 0xc3, 0xee, 0x1d, 0x29, 0x79, 0x9c, 0xf2, 0x10, 0x0f, 0x28, 0x31, 0x38, 0x71,
	0x45, 0x71, 0xe8, 0xe9, 0x43, 0x54, 0x25, 0xb1, 0x81, 0x83, 0xc9, 0x18, 0x10, 0x00, 0x00, 0xff,
	0xff, 0x46, 0x4f, 0x2a, 0xb8, 0x34, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ElleClient is the client API for Elle service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ElleClient interface {
	RequiresPayment(ctx context.Context, in *RequiresPaymentRequest, opts ...grpc.CallOption) (*RequiresPaymentResponse, error)
}

type elleClient struct {
	cc *grpc.ClientConn
}

func NewElleClient(cc *grpc.ClientConn) ElleClient {
	return &elleClient{cc}
}

func (c *elleClient) RequiresPayment(ctx context.Context, in *RequiresPaymentRequest, opts ...grpc.CallOption) (*RequiresPaymentResponse, error) {
	out := new(RequiresPaymentResponse)
	err := c.cc.Invoke(ctx, "/ellepb.Elle/RequiresPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ElleServer is the server API for Elle service.
type ElleServer interface {
	RequiresPayment(context.Context, *RequiresPaymentRequest) (*RequiresPaymentResponse, error)
}

// UnimplementedElleServer can be embedded to have forward compatible implementations.
type UnimplementedElleServer struct {
}

func (*UnimplementedElleServer) RequiresPayment(ctx context.Context, req *RequiresPaymentRequest) (*RequiresPaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequiresPayment not implemented")
}

func RegisterElleServer(s *grpc.Server, srv ElleServer) {
	s.RegisterService(&_Elle_serviceDesc, srv)
}

func _Elle_RequiresPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequiresPaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ElleServer).RequiresPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ellepb.Elle/RequiresPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ElleServer).RequiresPayment(ctx, req.(*RequiresPaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Elle_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ellepb.Elle",
	HandlerType: (*ElleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequiresPayment",
			Handler:    _Elle_RequiresPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "elle.proto",
}
